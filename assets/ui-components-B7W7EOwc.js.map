{"version":3,"file":"ui-components-B7W7EOwc.js","sources":["../../src/components/ImagePreloader.jsx","../../src/components/LazySection.jsx","../../src/components/LoadingSpinner.jsx"],"sourcesContent":["import { useEffect } from 'react';\r\n\r\n/**\r\n * Hook para precargar imágenes críticas\r\n * Útil para imágenes above-the-fold y recursos importantes\r\n */\r\nconst useImagePreloader = (imageSources = [], priority = 'normal') => {\r\n  useEffect(() => {\r\n    if (!imageSources.length) return;\r\n\r\n    const preloadImages = async () => {\r\n      const promises = imageSources.map((src) => {\r\n        return new Promise((resolve, reject) => {\r\n          const img = new Image();\r\n          img.onload = () => resolve(src);\r\n          img.onerror = () => reject(new Error(`Failed to preload: ${src}`));\r\n          img.src = src;\r\n        });\r\n      });\r\n\r\n      try {\r\n        await Promise.all(promises);\r\n        console.log(`✅ Preloaded ${imageSources.length} images with priority: ${priority}`);\r\n      } catch (error) {\r\n        console.warn('⚠️ Some images failed to preload:', error.message);\r\n      }\r\n    };\r\n\r\n    // Retrasar la precarga según la prioridad\r\n    const delay = {\r\n      high: 0,\r\n      normal: 100,\r\n      low: 500\r\n    }[priority] || 100;\r\n\r\n    const timeoutId = setTimeout(preloadImages, delay);\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [imageSources, priority]);\r\n};\r\n\r\n/**\r\n * Componente para precargar imágenes críticas\r\n * Se usa típicamente en App.jsx para precargar recursos importantes\r\n */\r\nconst ImagePreloader = ({ \r\n  images = [], \r\n  priority = 'normal',\r\n  onComplete = () => {},\r\n  onError = () => {} \r\n}) => {\r\n  useEffect(() => {\r\n    if (!images.length) return;\r\n\r\n    const preloadWithCallback = async () => {\r\n      try {\r\n        const promises = images.map((src) => {\r\n          const img = new Image();\r\n          return new Promise((resolve, reject) => {\r\n            img.onload = () => resolve(src);\r\n            img.onerror = () => reject(new Error(`Failed to preload: ${src}`));\r\n            img.src = src;\r\n          });\r\n        });\r\n\r\n        await Promise.all(promises);\r\n        onComplete();\r\n      } catch (error) {\r\n        onError(error);\r\n      }\r\n    };\r\n\r\n    preloadWithCallback();\r\n  }, [images, onComplete, onError]);\r\n\r\n  return null; // Este componente no renderiza nada\r\n};\r\n\r\nexport default ImagePreloader;\r\nexport { useImagePreloader };\r\n","import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport useIsMobile from '../hooks/useIsMobile';\r\n\r\n/**\r\n * Hook optimizado para lazy loading con prioridades y precarga inteligente\r\n * @param {Object} options - Configuraciones avanzadas\r\n * @returns {Object} - Estado de carga y referencias\r\n */\r\nexport const useLazyLoad = ({\r\n  // Configuración de intersección\r\n  threshold = 0.1,\r\n  rootMargin = '200px',\r\n  \r\n  // Configuraciones avanzadas\r\n  priority = 'normal', // 'high', 'normal', 'low'\r\n  preloadThreshold = '400px', // Distancia para precarga\r\n  enablePreload = true,\r\n  \r\n  // Configuraciones específicas por dispositivo\r\n  mobileRootMargin = '100px',\r\n  \r\n  // Configuraciones de rendimiento\r\n  fallbackHeight = 200,\r\n  animateIn = true,\r\n  \r\n  // Callbacks\r\n  onLoad = () => {},\r\n  onError = () => {}\r\n} = {}) => {\r\n  const isMobile = useIsMobile();\r\n  const [shouldLoad, setShouldLoad] = useState(false);\r\n  const [shouldPreload, setShouldPreload] = useState(false);\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  // Configuración optimizada según dispositivo\r\n  const config = useMemo(() => ({\r\n    threshold,\r\n    rootMargin: isMobile ? mobileRootMargin : rootMargin,\r\n    triggerOnce: true\r\n  }), [threshold, rootMargin, mobileRootMargin, isMobile]);\r\n\r\n  // Configuración para precarga\r\n  const preloadConfig = useMemo(() => ({\r\n    threshold: 0,\r\n    rootMargin: preloadThreshold,\r\n    triggerOnce: true\r\n  }), [preloadThreshold]);\r\n\r\n  const { ref: loadRef, inView: shouldLoadView } = useInView(config);\r\n  const { ref: preloadRef, inView: shouldPreloadView } = useInView(enablePreload ? preloadConfig : { threshold: 0 });\r\n\r\n  // Memoizar callbacks para evitar bucles infinitos\r\n  const memoizedOnLoad = useCallback(onLoad, []);\r\n  const memoizedOnError = useCallback(onError, []);\r\n\r\n  // Efectos de carga principal\r\n  useEffect(() => {\r\n    if (shouldLoadView && !shouldLoad) {\r\n      setShouldLoad(true);\r\n      setTimeout(() => {\r\n        setHasLoaded(true);\r\n        memoizedOnLoad();\r\n      }, priority === 'high' ? 0 : priority === 'normal' ? 50 : 100);\r\n    }\r\n  }, [shouldLoadView, shouldLoad, priority, memoizedOnLoad]);\r\n\r\n  // Efectos de precarga\r\n  useEffect(() => {\r\n    if (shouldPreloadView && enablePreload && !shouldPreload) {\r\n      setShouldPreload(true);\r\n    }\r\n  }, [shouldPreloadView, enablePreload, shouldPreload]);\r\n\r\n  // Manejo de errores\r\n  const handleError = (error) => {\r\n    setHasError(true);\r\n    memoizedOnError(error);\r\n  };\r\n\r\n  // Combinamos las refs\r\n  const combinedRef = (el) => {\r\n    loadRef(el);\r\n    if (enablePreload) preloadRef(el);\r\n  };\r\n\r\n  return {\r\n    ref: combinedRef,\r\n    shouldLoad,\r\n    shouldPreload,\r\n    hasLoaded,\r\n    hasError,\r\n    isVisible: shouldLoadView,\r\n    config: {\r\n      fallbackHeight: isMobile ? fallbackHeight * 0.7 : fallbackHeight,\r\n      animateIn,\r\n      priority\r\n    },\r\n    handleError\r\n  };\r\n};\r\n\r\n/**\r\n * Componente LazySection mejorado con configuraciones avanzadas\r\n */\r\nconst LazySection = ({\r\n  children,\r\n  priority = 'normal',\r\n  enablePreload = true,\r\n  fallbackHeight = 200,\r\n  loadingComponent,\r\n  errorComponent,\r\n  animateIn = true,\r\n  className = '',\r\n  style = {},\r\n  onLoad = () => {},\r\n  onError = () => {},\r\n  ...lazyOptions\r\n}) => {\r\n  const {\r\n    ref,\r\n    shouldLoad,\r\n    shouldPreload,\r\n    hasLoaded,\r\n    hasError,\r\n    config,\r\n    handleError\r\n  } = useLazyLoad({\r\n    priority,\r\n    enablePreload,\r\n    fallbackHeight,\r\n    onLoad,\r\n    onError,\r\n    ...lazyOptions\r\n  });\r\n\r\n  // Componente de loading por defecto\r\n  const DefaultLoader = () => (\r\n    <div \r\n      className=\"lazy-section-loader\"\r\n      style={{\r\n        minHeight: `${config.fallbackHeight}px`,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        background: 'linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%)',\r\n        backgroundSize: '200% 100%',\r\n        animation: 'loading-shimmer 1.5s infinite',\r\n        borderRadius: '4px',\r\n        margin: '1rem 0'\r\n      }}\r\n    >\r\n      <div style={{ \r\n        color: '#666', \r\n        fontSize: '0.9rem',\r\n        opacity: 0.7\r\n      }}>\r\n        Cargando...\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Componente de error por defecto\r\n  const DefaultError = () => (\r\n    <div \r\n      className=\"lazy-section-error\"\r\n      style={{\r\n        minHeight: `${config.fallbackHeight}px`,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: '#e74c3c',\r\n        border: '1px solid #fadbd8',\r\n        borderRadius: '4px',\r\n        padding: '2rem',\r\n        margin: '1rem 0',\r\n        backgroundColor: '#fdf2f2'\r\n      }}\r\n    >\r\n      <div style={{ fontSize: '1.1rem', marginBottom: '0.5rem' }}>\r\n        ⚠️ Error al cargar contenido\r\n      </div>\r\n      <button \r\n        onClick={() => window.location.reload()}\r\n        style={{\r\n          padding: '0.5rem 1rem',\r\n          background: '#e74c3c',\r\n          color: 'white',\r\n          border: 'none',\r\n          borderRadius: '4px',\r\n          cursor: 'pointer'\r\n        }}\r\n      >\r\n        Recargar página\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  // CSS de animación inline\r\n  const animationStyle = config.animateIn && hasLoaded ? {\r\n    opacity: 1,\r\n    transform: 'translateY(0)',\r\n    transition: 'opacity 0.3s ease-out, transform 0.3s ease-out'\r\n  } : config.animateIn ? {\r\n    opacity: 0,\r\n    transform: 'translateY(20px)',\r\n    transition: 'opacity 0.3s ease-out, transform 0.3s ease-out'\r\n  } : {};\r\n\r\n  return (\r\n    <>\r\n      {/* CSS de animación inyectado */}\r\n      <style>{`\r\n        @keyframes loading-shimmer {\r\n          0% { background-position: -200% 0; }\r\n          100% { background-position: 200% 0; }\r\n        }\r\n        .lazy-section-priority-high { z-index: 100; }\r\n        .lazy-section-priority-normal { z-index: 50; }\r\n        .lazy-section-priority-low { z-index: 10; }\r\n      `}</style>\r\n\r\n      <div \r\n        ref={ref}\r\n        className={`lazy-section lazy-section-priority-${priority} ${className}`}\r\n        style={{ ...style, ...animationStyle }}\r\n        data-priority={priority}\r\n        data-preload={enablePreload}\r\n      >\r\n        {hasError ? (\r\n          errorComponent || <DefaultError />\r\n        ) : shouldLoad ? (\r\n          <React.Suspense \r\n            fallback={loadingComponent || <DefaultLoader />}\r\n          >\r\n            {children}\r\n          </React.Suspense>\r\n        ) : (\r\n          loadingComponent || <DefaultLoader />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LazySection;\r\n","import './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = ({ text = 'Cargando...' }) => {\r\n  return (\r\n    <div className=\"loading-spinner\">\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n"],"names":["useImagePreloader","imageSources","priority","useEffect","preloadImages","promises","src","resolve","reject","img","error","delay","timeoutId","ImagePreloader","images","onComplete","onError","useLazyLoad","threshold","rootMargin","preloadThreshold","enablePreload","mobileRootMargin","fallbackHeight","animateIn","onLoad","isMobile","useIsMobile","shouldLoad","setShouldLoad","useState","shouldPreload","setShouldPreload","hasLoaded","setHasLoaded","hasError","setHasError","config","useMemo","preloadConfig","loadRef","shouldLoadView","useInView","preloadRef","shouldPreloadView","memoizedOnLoad","useCallback","memoizedOnError","handleError","el","LazySection","children","loadingComponent","errorComponent","className","style","lazyOptions","ref","DefaultLoader","jsx","DefaultError","jsxs","animationStyle","Fragment","React","LoadingSpinner","text"],"mappings":"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"}