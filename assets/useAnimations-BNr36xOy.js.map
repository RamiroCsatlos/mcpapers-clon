{"version":3,"file":"useAnimations-BNr36xOy.js","sources":["../../src/hooks/useAnimations.js"],"sourcesContent":["import { useInView } from 'react-intersection-observer';\r\nimport { useMemo } from 'react';\r\n\r\n/**\r\n * Configuraciones preestablecidas para animaciones comunes\r\n */\r\nexport const ANIMATION_PRESETS = {\r\n  // Configuración más común: fade-in con trigger único\r\n  DEFAULT: {\r\n    threshold: 0.2,\r\n    triggerOnce: true,\r\n    rootMargin: '50px'\r\n  },\r\n  // Para elementos que necesitan re-aparecer\r\n  REPEATABLE: {\r\n    threshold: 0.2,\r\n    triggerOnce: false,\r\n    rootMargin: '50px'\r\n  },\r\n  // Para elementos que necesitan mayor visibilidad antes de animar\r\n  STRICT: {\r\n    threshold: 0.5,\r\n    triggerOnce: true,\r\n    rootMargin: '0px'\r\n  },\r\n  // Para elementos que deben aparecer rápido\r\n  EAGER: {\r\n    threshold: 0.1,\r\n    triggerOnce: true,\r\n    rootMargin: '100px'\r\n  }\r\n};\r\n\r\n/**\r\n * Hook optimizado para animaciones con intersection observer\r\n * @param {string|Object} preset - Preset name o configuración custom\r\n * @returns {Object} - Ref, estado inView y className automática\r\n */\r\nexport const useInViewAnimation = (preset = 'DEFAULT') => {\r\n  const options = useMemo(() => {\r\n    if (typeof preset === 'string') {\r\n      return ANIMATION_PRESETS[preset] || ANIMATION_PRESETS.DEFAULT;\r\n    }\r\n    return { ...ANIMATION_PRESETS.DEFAULT, ...preset };\r\n  }, [preset]);\r\n\r\n  const { ref, inView } = useInView(options);\r\n\r\n  return {\r\n    ref,\r\n    inView,\r\n    className: inView ? 'fade-in-visible' : '',\r\n    // Helper para clases condicionales\r\n    getClassName: (baseClass = '') => \r\n      `${baseClass} fade-in-up${inView ? ' fade-in-visible' : ''}`.trim()\r\n  };\r\n};\r\n\r\n/**\r\n * Hook especializado para secciones comunes (título + imagen + texto + lista)\r\n * Usa hooks individuales para evitar problemas con rules-of-hooks\r\n * @param {string|Object} preset - Preset o configuración\r\n * @returns {Object} - Refs e inView states preconfigurados\r\n */\r\nexport const useCommonSectionAnimations = (preset = 'DEFAULT') => {\r\n  const options = useMemo(() => {\r\n    if (typeof preset === 'string') {\r\n      return ANIMATION_PRESETS[preset] || ANIMATION_PRESETS.DEFAULT;\r\n    }\r\n    return { ...ANIMATION_PRESETS.DEFAULT, ...preset };\r\n  }, [preset]);\r\n\r\n  const { ref: h2Ref, inView: h2InView } = useInView(options);\r\n  const { ref: img1Ref, inView: img1InView } = useInView(options);\r\n  const { ref: textRef, inView: textInView } = useInView(options);\r\n  const { ref: img2Ref, inView: img2InView } = useInView(options);\r\n  const { ref: mobileImagesRef, inView: mobileImagesInView } = useInView(options);\r\n  const { ref: listRef, inView: listInView } = useInView(options);\r\n\r\n  return {\r\n    h2Ref, h2InView,\r\n    img1Ref, img1InView,\r\n    textRef, textInView,\r\n    img2Ref, img2InView,\r\n    mobileImagesRef, mobileImagesInView,\r\n    listRef, listInView\r\n  };\r\n};\r\n\r\n/**\r\n * Hook especializado para secciones de información (título + imagen + items)\r\n * @param {string|Object} preset - Preset o configuración\r\n * @returns {Object} - Refs e inView states preconfigurados\r\n */\r\nexport const useInfoSectionAnimations = (preset = 'DEFAULT') => {\r\n  const options = useMemo(() => {\r\n    if (typeof preset === 'string') {\r\n      return ANIMATION_PRESETS[preset] || ANIMATION_PRESETS.DEFAULT;\r\n    }\r\n    return { ...ANIMATION_PRESETS.DEFAULT, ...preset };\r\n  }, [preset]);\r\n\r\n  const { ref: h2Ref, inView: h2InView } = useInView(options);\r\n  const { ref: imgRef, inView: imgInView } = useInView(options);\r\n  const { ref: h3Ref, inView: h3InView } = useInView(options);\r\n  const { ref: h4Ref, inView: h4InView } = useInView(options);\r\n  const { ref: pRef, inView: pInView } = useInView(options);\r\n\r\n  return {\r\n    h2Ref, h2InView,\r\n    imgRef, imgInView,\r\n    h3Ref, h3InView,\r\n    h4Ref, h4InView,\r\n    pRef, pInView\r\n  };\r\n};\r\n\r\nexport default useInViewAnimation;\r\n"],"names":["ANIMATION_PRESETS","useCommonSectionAnimations","preset","options","useMemo","h2Ref","h2InView","useInView","img1Ref","img1InView","textRef","textInView","img2Ref","img2InView","mobileImagesRef","mobileImagesInView","listRef","listInView","useInfoSectionAnimations","imgRef","imgInView","h3Ref","h3InView","h4Ref","h4InView","pRef","pInView"],"mappings":"kGAMY,MAACA,EAAoB,CAE/B,QAAS,CACP,UAAW,GACX,YAAa,GACb,WAAY,MAChB,EAEE,WAAY,CACV,UAAW,GACX,YAAa,GACb,WAAY,MAChB,EAEE,OAAQ,CACN,UAAW,GACX,YAAa,GACb,WAAY,KAChB,EAEE,MAAO,CACL,UAAW,GACX,YAAa,GACb,WAAY,OAChB,CACA,EAiCaC,EAA6B,CAACC,EAAS,YAAc,CAChE,MAAMC,EAAUC,EAAAA,QAAQ,IAClB,OAAOF,GAAW,SACbF,EAAkBE,CAAM,GAAKF,EAAkB,QAEjD,CAAE,GAAGA,EAAkB,QAAS,GAAGE,CAAM,EAC/C,CAACA,CAAM,CAAC,EAEL,CAAE,IAAKG,EAAO,OAAQC,GAAaC,EAAUJ,CAAO,EACpD,CAAE,IAAKK,EAAS,OAAQC,GAAeF,EAAUJ,CAAO,EACxD,CAAE,IAAKO,EAAS,OAAQC,GAAeJ,EAAUJ,CAAO,EACxD,CAAE,IAAKS,EAAS,OAAQC,GAAeN,EAAUJ,CAAO,EACxD,CAAE,IAAKW,EAAiB,OAAQC,GAAuBR,EAAUJ,CAAO,EACxE,CAAE,IAAKa,EAAS,OAAQC,GAAeV,EAAUJ,CAAO,EAE9D,MAAO,CACL,MAAAE,EAAO,SAAAC,EACP,QAAAE,EAAS,WAAAC,EACT,QAAAC,EAAS,WAAAC,EACT,QAAAC,EAAS,WAAAC,EACT,gBAAAC,EAAiB,mBAAAC,EACjB,QAAAC,EAAS,WAAAC,CACb,CACA,EAOaC,EAA2B,CAAChB,EAAS,YAAc,CAC9D,MAAMC,EAAUC,EAAAA,QAAQ,IAClB,OAAOF,GAAW,SACbF,EAAkBE,CAAM,GAAKF,EAAkB,QAEjD,CAAE,GAAGA,EAAkB,QAAS,GAAGE,CAAM,EAC/C,CAACA,CAAM,CAAC,EAEL,CAAE,IAAKG,EAAO,OAAQC,GAAaC,EAAUJ,CAAO,EACpD,CAAE,IAAKgB,EAAQ,OAAQC,GAAcb,EAAUJ,CAAO,EACtD,CAAE,IAAKkB,EAAO,OAAQC,GAAaf,EAAUJ,CAAO,EACpD,CAAE,IAAKoB,EAAO,OAAQC,GAAajB,EAAUJ,CAAO,EACpD,CAAE,IAAKsB,EAAM,OAAQC,GAAYnB,EAAUJ,CAAO,EAExD,MAAO,CACL,MAAAE,EAAO,SAAAC,EACP,OAAAa,EAAQ,UAAAC,EACR,MAAAC,EAAO,SAAAC,EACP,MAAAC,EAAO,SAAAC,EACP,KAAAC,EAAM,QAAAC,CACV,CACA"}